basePath: /api/v1
definitions:
  APIError:
    description: API error information
    properties:
      code:
        example: VALIDATION_ERROR
        type: string
      details:
        example: Field 'message' is required
        type: string
      message:
        example: Invalid request parameters
        type: string
    type: object
  APIResponse:
    description: Standard API response wrapper
    properties:
      data: {}
      error:
        $ref: '#/definitions/APIError'
      message:
        example: Request processed successfully
        type: string
      success:
        example: true
        type: boolean
      timestamp:
        example: "2023-01-01T12:00:00Z"
        type: string
    type: object
  ChatMetadata:
    description: Metadata about the chat response
    properties:
      conversation_count:
        example: 3
        type: integer
      processing_time_ms:
        example: 1500
        type: integer
      tokens_estimate:
        example: 45
        type: integer
    type: object
  ChatRequest:
    description: Chat message request payload
    properties:
      message:
        example: Hello, how are you?
        maxLength: 10000
        minLength: 1
        type: string
      model:
        example: gpt-4o-mini
        type: string
    required:
    - message
    type: object
  ChatResponse:
    description: Chat response payload
    properties:
      message_id:
        example: msg_123456
        type: string
      metadata:
        $ref: '#/definitions/ChatMetadata'
      model:
        example: gpt-4o-mini
        type: string
      response:
        example: Hello! I'm doing well, thank you for asking.
        type: string
    type: object
  HealthResponse:
    description: Health check response payload
    properties:
      services:
        additionalProperties:
          type: string
        type: object
      status:
        example: healthy
        type: string
      timestamp:
        example: "2023-01-01T12:00:00Z"
        type: string
      uptime_seconds:
        example: 3600
        type: integer
      version:
        example: 1.0.0
        type: string
    type: object
  HistoryResponse:
    description: Chat history response payload
    properties:
      messages:
        items:
          $ref: '#/definitions/MessageResponse'
        type: array
      model:
        example: gpt-4o-mini
        type: string
      session_id:
        example: session_123456
        type: string
      total_messages:
        example: 10
        type: integer
    type: object
  MessageResponse:
    description: Individual message in chat history
    properties:
      content:
        example: Hello, how are you?
        type: string
      id:
        example: msg_123456
        type: string
      role:
        example: user
        type: string
      timestamp:
        example: "2023-01-01T12:00:00Z"
        type: string
    type: object
  ModelChangeRequest:
    description: Model change request payload
    properties:
      model:
        example: gpt-4o-mini
        type: string
    required:
    - model
    type: object
  ModelInfo:
    description: Information about an available model
    properties:
      description:
        example: Fast and efficient model for general conversations
        type: string
      id:
        example: gpt-4o-mini
        type: string
      is_default:
        example: true
        type: boolean
      name:
        example: GPT-4o-mini
        type: string
    type: object
  ModelsResponse:
    description: Available models response payload
    properties:
      current_model:
        example: gpt-4o-mini
        type: string
      models:
        items:
          $ref: '#/definitions/ModelInfo'
        type: array
      total_models:
        example: 5
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: contact@devbyben.fr
    name: devbyben
    url: https://github.com/benoitpetit/duckduckGO-chat-cli
  description: REST API for DuckDuckGo Chat CLI - programmatic access to AI chat functionality
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://duckduckgo.com/terms
  title: duckduckGO-chat-cli API
  version: 1.0.0
paths:
  /chat:
    post:
      consumes:
      - application/json
      description: Send a message to the AI and receive a response
      parameters:
      - description: Chat message request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful chat response
          schema:
            allOf:
            - $ref: '#/definitions/APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/ChatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/APIError'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/APIError'
              type: object
      summary: Send a chat message
      tags:
      - Chat
  /health:
    get:
      description: Check the health status of the API server
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            allOf:
            - $ref: '#/definitions/APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/HealthResponse'
              type: object
      summary: Health check
      tags:
      - Health
  /history:
    delete:
      description: Clear the current chat session history
      produces:
      - application/json
      responses:
        "200":
          description: Chat history cleared successfully
          schema:
            $ref: '#/definitions/APIResponse'
      summary: Clear chat history
      tags:
      - Chat
    get:
      description: Retrieve the complete chat session history
      parameters:
      - default: 50
        description: Maximum number of messages to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of messages to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Chat history retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/HistoryResponse'
              type: object
        "400":
          description: Invalid query parameters
          schema:
            allOf:
            - $ref: '#/definitions/APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/APIError'
              type: object
      summary: Get chat history
      tags:
      - Chat
  /models:
    get:
      description: Retrieve list of all available AI models
      produces:
      - application/json
      responses:
        "200":
          description: Available models retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/ModelsResponse'
              type: object
      summary: Get available models
      tags:
      - Models
    post:
      consumes:
      - application/json
      description: Change the current AI model for the chat session
      parameters:
      - description: Model change request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ModelChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Model changed successfully
          schema:
            allOf:
            - $ref: '#/definitions/APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/ModelInfo'
              type: object
        "400":
          description: Invalid request or model not found
          schema:
            allOf:
            - $ref: '#/definitions/APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/APIError'
              type: object
      summary: Change AI model
      tags:
      - Models
  /session:
    get:
      description: Get information about the current chat session
      produces:
      - application/json
      responses:
        "200":
          description: Session information retrieved successfully
          schema:
            $ref: '#/definitions/APIResponse'
      summary: Get session information
      tags:
      - Session
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: 'API key authorization. Example: "Bearer {api_key}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
